12.2.1 Exercises

1) Table 1: each column indicates a variable defined by the header. each row is a unique observaton. 
table 2 : country and year each have their own column, but the type column contains contains multiple variables.
table 3: country and year still have their own columns and although there's only one column for rate, it would be more useful if rate were broken up into it's two components.
talbe 4: the two variables are in two different tables. the variable year is also broken out amongst two columns.

2)
cases <- filter(table2, type == "cases")

population <- filter(table2, type == "population")

new<- join(cases,popoulation, type = "left", match = "all")

mutate(rate = cases / population * 10000)

4a and 4b are easier in this case because they already have the step of creating 2 seperate tables with cases and populaton.

3) same start as to 2) then plot the data:

ggplot(new, aes(year, cases)) + 
  geom_line(aes(group = country), colour = "grey50") + 
  geom_point(aes(colour = country))

12.3.3 Exercises

1) when you spread, you've created new variables with each of the years.

2) need brackets around the dates.

3) There's two different ages for Phillip Woods. We need a way to uniquely identify them.

4) gather(preg,"male","female",key = "sex",value = "age")

12.4.3 Exercises

1)If sep is a character vector, this controls what happens when there are too many pieces. If sep is a character vector, this controls what happens when there are not enough pieces.

2) If TRUE, remove input columns from output data frame. use false if you want to keep source data.

3) you can choose to seperate into as many groups as possible then unite them from there.

12.5.1 Exercises

1) fill requires explicit missing values to work. complete makes all implicitly missing values explicit.

2) Down takes the bottom value.

12.6.1 Exerecises

1) this is resasonable becuase there are 0s so youre not ignoring confirmed counts of 0 as unavailable data.

2) the seperate steps wouldn't work because the _ is consistent among the entries.

3) 
distinct(who3,"country")
distinct(who3,"iso2")
distinct(who3,"iso3")

4)
who5 %>%
  group_by(country, year, sex) %>%
  filter(year > 1995) %>%
  summarise(cases = sum(cases)) %>%
  unite(country_sex, country, sex, remove = FALSE) %>%
  ggplot(aes(x = year, y = cases, group = country_sex, colour = sex)) +
  geom_line()

13.2.1 Exercises

1) flights and airports tables. latiude, longitutde.

2) origin links to name in airports and weather. may need to mutate name to get them to join.

3) destination

4) a holliday key that's binary 1,0
